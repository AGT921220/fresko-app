{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/focus-visible-f4ad4f1a.js"],"names":["ION_FOCUSED","ION_FOCUSABLE","FOCUS_KEYS","startFocusVisible","currentFocus","keyboardMode","doc","document","setFocus","elements","forEach","el","classList","remove","add","pointerDown","addEventListener","ev","includes","key","composedPath","toFocus","filter","contains","activeElement","body"],"mappings":";;;;;;;;;;;;;IAAA;IAAA;;;IAAA;MAAA;IAAA;;IAAA,IAAMA,WAAW,GAAG,aAApB;IACA,IAAMC,aAAa,GAAG,eAAtB;IACA,IAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,WAAR,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,GAAxC,EAA6C,OAA7C,EAAsD,OAAtD,EAA+D,WAA/D,EAA4E,YAA5E,EAA0F,SAA1F,CAAnB;;IACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;MAC9B,IAAIC,YAAY,GAAG,EAAnB;MACA,IAAIC,YAAY,GAAG,IAAnB;MACA,IAAMC,GAAG,GAAGC,QAAZ;;MACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;QAC7BL,YAAY,CAACM,OAAb,CAAqB,UAAAC,EAAE;UAAA,OAAIA,EAAE,CAACC,SAAH,CAAaC,MAAb,CAAoBb,WAApB,CAAJ;QAAA,CAAvB;QACAS,QAAQ,CAACC,OAAT,CAAiB,UAAAC,EAAE;UAAA,OAAIA,EAAE,CAACC,SAAH,CAAaE,GAAb,CAAiBd,WAAjB,CAAJ;QAAA,CAAnB;QACAI,YAAY,GAAGK,QAAf;MACD,CAJD;;MAKA,IAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;QACxBV,YAAY,GAAG,KAAf;QACAG,QAAQ,CAAC,EAAD,CAAR;MACD,CAHD;;MAIAF,GAAG,CAACU,gBAAJ,CAAqB,SAArB,EAAgC,UAAAC,EAAE,EAAI;QACpCZ,YAAY,GAAGH,UAAU,CAACgB,QAAX,CAAoBD,EAAE,CAACE,GAAvB,CAAf;;QACA,IAAI,CAACd,YAAL,EAAmB;UACjBG,QAAQ,CAAC,EAAD,CAAR;QACD;MACF,CALD;MAMAF,GAAG,CAACU,gBAAJ,CAAqB,SAArB,EAAgC,UAAAC,EAAE,EAAI;QACpC,IAAIZ,YAAY,IAAIY,EAAE,CAACG,YAAvB,EAAqC;UACnC,IAAMC,OAAO,GAAGJ,EAAE,CAACG,YAAH,GAAkBE,MAAlB,CAAyB,UAACX,EAAD,EAAQ;YAC/C,IAAIA,EAAE,CAACC,SAAP,EAAkB;cAChB,OAAOD,EAAE,CAACC,SAAH,CAAaW,QAAb,CAAsBtB,aAAtB,CAAP;YACD;;YACD,OAAO,KAAP;UACD,CALe,CAAhB;UAMAO,QAAQ,CAACa,OAAD,CAAR;QACD;MACF,CAVD;MAWAf,GAAG,CAACU,gBAAJ,CAAqB,UAArB,EAAiC,YAAM;QACrC,IAAIV,GAAG,CAACkB,aAAJ,KAAsBlB,GAAG,CAACmB,IAA9B,EAAoC;UAClCjB,QAAQ,CAAC,EAAD,CAAR;QACD;MACF,CAJD;MAKAF,GAAG,CAACU,gBAAJ,CAAqB,YAArB,EAAmCD,WAAnC;MACAT,GAAG,CAACU,gBAAJ,CAAqB,WAArB,EAAkCD,WAAlC;IACD,CArCD","file":"focus-visible-f4ad4f1a-js-es5.js","sourcesContent":["const ION_FOCUSED = 'ion-focused';\nconst ION_FOCUSABLE = 'ion-focusable';\nconst FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\nconst startFocusVisible = () => {\n  let currentFocus = [];\n  let keyboardMode = true;\n  const doc = document;\n  const setFocus = (elements) => {\n    currentFocus.forEach(el => el.classList.remove(ION_FOCUSED));\n    elements.forEach(el => el.classList.add(ION_FOCUSED));\n    currentFocus = elements;\n  };\n  const pointerDown = () => {\n    keyboardMode = false;\n    setFocus([]);\n  };\n  doc.addEventListener('keydown', ev => {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('focusin', ev => {\n    if (keyboardMode && ev.composedPath) {\n      const toFocus = ev.composedPath().filter((el) => {\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  });\n  doc.addEventListener('focusout', () => {\n    if (doc.activeElement === doc.body) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('touchstart', pointerDown);\n  doc.addEventListener('mousedown', pointerDown);\n};\n\nexport { startFocusVisible };\n"]}