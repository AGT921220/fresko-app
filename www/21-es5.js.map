{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","component","params","state","container","element","delegate","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","gesture","enable","swipeGesture","root","setRoot","rootParams","document","querySelector","el","closest","mode","getBoolean","emit","rootChanged","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","swipeGestureChanged","_destroy","destroy","opts","done","queueTrns","insertStart","insertViews","insertIndex","insertComponents","removeStart","removeCount","indexOrViewCtrl","tiConfig","removeView","startIndex","setPages","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","popTo","assign","animationBuilder","push","tagName","index","canGoBackSync","getPreviousSync","indexOf","ti","skipIfBusy","reject","router","canTransition","nextTrns","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","init","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","success","failed","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViewAt","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","style","navLink","routerDirection","routerAnimation","pop","NavLink","onClick"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA;IAAA;;;IAAA;MAAA;IAAA;IAAA;;;IAAA;MAAA;IAAA;IAAA;;;IAAA;IAAA;IAAA;IAAA;;;IAAA;IAAA;IAAA;IAAA;;;IAAA;IAAA;IAAA;IAAA;;;IAAA;IAAA;IAAA;IAAA;;;IAAA;IAAA;IAAA;IAAA;;;IAAA;IAAA;IAAA;;IAOA,IAAMA,cAAc,GAAG,CAAvB;IACA,IAAMC,mBAAmB,GAAG,CAA5B;IACA,IAAMC,oBAAoB,GAAG,CAA7B;;QACMC,c;MACJ,wBAAYC,SAAZ,EAAuBC,MAAvB,EAA+B;QAAA;;QAC7B,KAAKD,SAAL,GAAiBA,SAAjB;QACA,KAAKC,MAAL,GAAcA,MAAd;QACA,KAAKC,KAAL,GAAaN,cAAb;MACD;;;;;iFACD,iBAAWO,SAAX;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBACE,KAAKD,KAAL,GAAaL,mBAAb;;oBADF,IAEO,KAAKO,OAFZ;sBAAA;sBAAA;oBAAA;;oBAGUJ,SAHV,GAGsB,KAAKA,SAH3B;oBAAA;oBAAA,OAIyB,0EAAgB,KAAKK,QAArB,EAA+BF,SAA/B,EAA0CH,SAA1C,EAAqD,CAAC,UAAD,EAAa,oBAAb,CAArD,EAAyF,KAAKC,MAA9F,CAJzB;;kBAAA;oBAII,KAAKG,OAJT;;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,C;;;;;;;;QAOA;AACF;AACA;;;;eACE,oBAAW;UACT,+DAAO,KAAKF,KAAL,KAAeJ,oBAAtB,EAA4C,6BAA5C;UACA,IAAMM,OAAO,GAAG,KAAKA,OAArB;;UACA,IAAIA,OAAJ,EAAa;YACX,IAAI,KAAKC,QAAT,EAAmB;cACjB,KAAKA,QAAL,CAAcC,iBAAd,CAAgCF,OAAO,CAACG,aAAxC,EAAuDH,OAAvD;YACD,CAFD,MAGK;cACHA,OAAO,CAACI,MAAR;YACD;UACF;;UACD,KAAKC,GAAL,GAAWC,SAAX;UACA,KAAKR,KAAL,GAAaJ,oBAAb;QACD;;;;;;IAEH,IAAMa,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,EAAP,EAAWZ,MAAX,EAAsB;MACpC,IAAI,CAACW,IAAL,EAAW;QACT,OAAO,KAAP;MACD;;MACD,IAAIA,IAAI,CAACZ,SAAL,KAAmBa,EAAvB,EAA2B;QACzB,OAAO,KAAP;MACD;;MACD,IAAMC,aAAa,GAAGF,IAAI,CAACX,MAA3B;;MACA,IAAIa,aAAa,KAAKb,MAAtB,EAA8B;QAC5B,OAAO,IAAP;MACD;;MACD,IAAI,CAACa,aAAD,IAAkB,CAACb,MAAvB,EAA+B;QAC7B,OAAO,IAAP;MACD;;MACD,IAAI,CAACa,aAAD,IAAkB,CAACb,MAAvB,EAA+B;QAC7B,OAAO,KAAP;MACD;;MACD,IAAMc,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,aAAZ,CAAd;MACA,IAAMI,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYhB,MAAZ,CAAd;;MACA,IAAIc,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;QACjC,OAAO,KAAP;MACD,CArBmC,CAsBpC;;;MACA,0BAAkBJ,KAAlB,4BAAyB;QAApB,IAAMK,GAAG,aAAT;;QACH,IAAIN,aAAa,CAACM,GAAD,CAAb,KAAuBnB,MAAM,CAACmB,GAAD,CAAjC,EAAwC;UACtC,OAAO,KAAP;QACD;MACF;;MACD,OAAO,IAAP;IACD,CA7BD;;IA8BA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOrB,MAAP,EAAkB;MACtC,IAAI,CAACqB,IAAL,EAAW;QACT,OAAO,IAAP;MACD;;MACD,IAAIA,IAAI,YAAYvB,cAApB,EAAoC;QAClC,OAAOuB,IAAP;MACD;;MACD,OAAO,IAAIvB,cAAJ,CAAmBuB,IAAnB,EAAyBrB,MAAzB,CAAP;IACD,CARD;;IASA,IAAMsB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;MAChC,OAAOA,KAAK,CAACC,GAAN,CAAU,UAAAH,IAAI,EAAI;QACvB,IAAIA,IAAI,YAAYvB,cAApB,EAAoC;UAClC,OAAOuB,IAAP;QACD;;QACD,IAAI,eAAeA,IAAnB,EAAyB;UACvB;AACN;AACA;AACA;AACA;AACA;AACA;UACM,OAAOD,aAAa,CAACC,IAAI,CAACtB,SAAN,EAAkBsB,IAAI,CAACI,cAAL,KAAwB,IAAzB,GAAiChB,SAAjC,GAA6CY,IAAI,CAACI,cAAnE,CAApB;QACD;;QACD,OAAOL,aAAa,CAACC,IAAD,EAAOZ,SAAP,CAApB;MACD,CAfM,EAeJiB,MAfI,CAeG,UAAAC,CAAC;QAAA,OAAIA,CAAC,KAAK,IAAV;MAAA,CAfJ,CAAP;IAgBD,CAjBD;;IAmBA,IAAMC,MAAM,GAAG,4GAAf;;IAEA,IAAMC,GAAG;MACP,aAAYC,OAAZ,EAAqB;QAAA;;QACnB,6DAAiB,IAAjB,EAAuBA,OAAvB;QACA,KAAKC,cAAL,GAAsB,6DAAY,IAAZ,EAAkB,gBAAlB,EAAoC,CAApC,CAAtB;QACA,KAAKC,gBAAL,GAAwB,6DAAY,IAAZ,EAAkB,kBAAlB,EAAsC,CAAtC,CAAxB;QACA,KAAKC,eAAL,GAAuB,6DAAY,IAAZ,EAAkB,iBAAlB,EAAqC,CAArC,CAAvB;QACA,KAAKC,UAAL,GAAkB,EAAlB;QACA,KAAKC,gBAAL,GAAwB,IAAxB;QACA,KAAKC,SAAL,GAAiB,KAAjB;QACA,KAAKC,eAAL,GAAuB,KAAvB;QACA,KAAKC,SAAL,GAAiB,KAAjB;QACA,KAAKC,KAAL,GAAa,EAAb;QACA;AACJ;AACA;;QACI,KAAKC,QAAL,GAAgB,IAAhB;MACD;;MAhBM;QAAA;QAAA,OAiBP,+BAAsB;UACpB,IAAI,KAAKC,OAAT,EAAkB;YAChB,KAAKA,OAAL,CAAaC,MAAb,CAAoB,KAAKC,YAAL,KAAsB,IAA1C;UACD;QACF;MArBM;QAAA;QAAA,OAsBP,uBAAc;UACZ,IAAI,KAAKC,IAAL,KAAcnC,SAAlB,EAA6B;YAC3B,IAAI,CAAC,KAAK2B,SAAV,EAAqB;cACnB,KAAKS,OAAL,CAAa,KAAKD,IAAlB,EAAwB,KAAKE,UAA7B;YACD;UACF;QACF;MA5BM;QAAA;QAAA,OA6BP,6BAAoB;UAClB,KAAKV,SAAL,GACE,CAAC,CAACW,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAF,IACE,CAAC,KAAKC,EAAL,CAAQC,OAAR,CAAgB,aAAhB,CAFL;;UAGA,IAAI,KAAKP,YAAL,KAAsBlC,SAA1B,EAAqC;YACnC,IAAM0C,IAAI,GAAG,oEAAW,IAAX,CAAb;YACA,KAAKR,YAAL,GAAoB,4DAAOS,UAAP,CAAkB,kBAAlB,EAAsCD,IAAI,KAAK,KAA/C,CAApB;UACD;;UACD,KAAKpB,cAAL,CAAoBsB,IAApB;QACD;MAtCM;QAAA;QAAA;UAAA,mFAuCP;YAAA;cAAA;gBAAA;kBAAA;oBACE,KAAKC,WAAL;oBADF;oBAAA,OAEwB;oBAAA;oBAAA;oBAAA;oBAAA,8DAFxB;;kBAAA;oBAEE,KAAKb,OAFP,kBAE4Dc,sBAF5D,CAEmF,KAAKN,EAFxF,EAE4F,KAAKO,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAF5F,EAEsH,KAAKC,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAFtH,EAE+I,KAAKE,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAF/I,EAEuK,KAAKG,KAAL,CAAWH,IAAX,CAAgB,IAAhB,CAFvK;oBAGE,KAAKI,mBAAL;;kBAHF;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CAvCO;;UAAA;YAAA;UAAA;;UAAA;QAAA;MAAA;QAAA;QAAA,OA4CP,gCAAuB;UAAA,2CACF,KAAKtB,KADH;UAAA;;UAAA;YACrB,oDAA+B;cAAA,IAApB5B,IAAoB;cAC7B,6DAAUA,IAAI,CAACR,OAAf,EAAwB,oDAAxB;;cACAQ,IAAI,CAACmD,QAAL;YACD;UAJoB;YAAA;UAAA;YAAA;UAAA;;UAKrB,IAAI,KAAKrB,OAAT,EAAkB;YAChB,KAAKA,OAAL,CAAasB,OAAb;YACA,KAAKtB,OAAL,GAAehC,SAAf;UACD,CARoB,CASrB;;;UACA,KAAKyB,UAAL,CAAgBhB,MAAhB,GAAyB,KAAKqB,KAAL,CAAWrB,MAAX,GAAoB,CAA7C;UACA,KAAKoB,SAAL,GAAiB,IAAjB;QACD;QACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAlES;QAAA;QAAA,OAmEP,cAAKvC,SAAL,EAAgB0B,cAAhB,EAAgCuC,IAAhC,EAAsCC,IAAtC,EAA4C;UAC1C,OAAO,KAAKC,SAAL,CAAe;YACpBC,WAAW,EAAE,CAAC,CADM;YAEpBC,WAAW,EAAE,CAAC;cAAErE,SAAS,EAATA,SAAF;cAAa0B,cAAc,EAAdA;YAAb,CAAD,CAFO;YAGpBuC,IAAI,EAAJA;UAHoB,CAAf,EAIJC,IAJI,CAAP;QAKD;QACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAnFS;QAAA;QAAA,OAoFP,gBAAOI,WAAP,EAAoBtE,SAApB,EAA+B0B,cAA/B,EAA+CuC,IAA/C,EAAqDC,IAArD,EAA2D;UACzD,OAAO,KAAKC,SAAL,CAAe;YACpBC,WAAW,EAAEE,WADO;YAEpBD,WAAW,EAAE,CAAC;cAAErE,SAAS,EAATA,SAAF;cAAa0B,cAAc,EAAdA;YAAb,CAAD,CAFO;YAGpBuC,IAAI,EAAJA;UAHoB,CAAf,EAIJC,IAJI,CAAP;QAKD;QACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MApGS;QAAA;QAAA,OAqGP,qBAAYI,WAAZ,EAAyBC,gBAAzB,EAA2CN,IAA3C,EAAiDC,IAAjD,EAAuD;UACrD,OAAO,KAAKC,SAAL,CAAe;YACpBC,WAAW,EAAEE,WADO;YAEpBD,WAAW,EAAEE,gBAFO;YAGpBN,IAAI,EAAJA;UAHoB,CAAf,EAIJC,IAJI,CAAP;QAKD;QACD;AACF;AACA;AACA;AACA;AACA;AACA;;MAlHS;QAAA;QAAA,OAmHP,aAAID,IAAJ,EAAUC,IAAV,EAAgB;UACd,OAAO,KAAKC,SAAL,CAAe;YACpBK,WAAW,EAAE,CAAC,CADM;YAEpBC,WAAW,EAAE,CAFO;YAGpBR,IAAI,EAAJA;UAHoB,CAAf,EAIJC,IAJI,CAAP;QAKD;QACD;AACF;AACA;AACA;AACA;AACA;AACA;;MAhIS;QAAA;QAAA,OAiIP,eAAMQ,eAAN,EAAuBT,IAAvB,EAA6BC,IAA7B,EAAmC;UACjC,IAAMS,QAAQ,GAAG;YACfH,WAAW,EAAE,CAAC,CADC;YAEfC,WAAW,EAAE,CAAC,CAFC;YAGfR,IAAI,EAAJA;UAHe,CAAjB;;UAKA,IAAI,OAAOS,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,CAAC1E,SAA3D,EAAsE;YACpE2E,QAAQ,CAACC,UAAT,GAAsBF,eAAtB;YACAC,QAAQ,CAACH,WAAT,GAAuB,CAAvB;UACD,CAHD,MAIK,IAAI,OAAOE,eAAP,KAA2B,QAA/B,EAAyC;YAC5CC,QAAQ,CAACH,WAAT,GAAuBE,eAAe,GAAG,CAAzC;UACD;;UACD,OAAO,KAAKP,SAAL,CAAeQ,QAAf,EAAyBT,IAAzB,CAAP;QACD;QACD;AACF;AACA;AACA;AACA;AACA;;MArJS;QAAA;QAAA,OAsJP,mBAAUD,IAAV,EAAgBC,IAAhB,EAAsB;UACpB,OAAO,KAAKC,SAAL,CAAe;YACpBK,WAAW,EAAE,CADO;YAEpBC,WAAW,EAAE,CAAC,CAFM;YAGpBR,IAAI,EAAJA;UAHoB,CAAf,EAIJC,IAJI,CAAP;QAKD;QACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;MApKS;QAAA;QAAA,OAqKP,qBAAYW,UAAZ,EAAqD;UAAA,IAA7BJ,WAA6B,uEAAf,CAAe;UAAA,IAAZR,IAAY;UAAA,IAANC,IAAM;UACnD,OAAO,KAAKC,SAAL,CAAe;YACpBK,WAAW,EAAEK,UADO;YAEpBJ,WAAW,EAAXA,WAFoB;YAGpBR,IAAI,EAAJA;UAHoB,CAAf,EAIJC,IAJI,CAAP;QAKD;QACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;MAnLS;QAAA;QAAA,OAoLP,iBAAQlE,SAAR,EAAmB0B,cAAnB,EAAmCuC,IAAnC,EAAyCC,IAAzC,EAA+C;UAC7C,OAAO,KAAKY,QAAL,CAAc,CAAC;YAAE9E,SAAS,EAATA,SAAF;YAAa0B,cAAc,EAAdA;UAAb,CAAD,CAAd,EAA+CuC,IAA/C,EAAqDC,IAArD,CAAP;QACD;QACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAhMS;QAAA;QAAA,OAiMP,kBAAS1B,KAAT,EAAgByB,IAAhB,EAAsBC,IAAtB,EAA4B;UAC1B,IAAID,IAAI,IAAI,IAAZ,EAAkB;YAChBA,IAAI,GAAG,EAAP;UACD,CAHyB,CAI1B;;;UACA,IAAIA,IAAI,CAACxB,QAAL,KAAkB,IAAtB,EAA4B;YAC1BwB,IAAI,CAACxB,QAAL,GAAgB,KAAhB;UACD;;UACD,OAAO,KAAK0B,SAAL,CAAe;YACpBC,WAAW,EAAE,CADO;YAEpBC,WAAW,EAAE7B,KAFO;YAGpBgC,WAAW,EAAE,CAHO;YAIpBC,WAAW,EAAE,CAAC,CAJM;YAKpBR,IAAI,EAAJA;UALoB,CAAf,EAMJC,IANI,CAAP;QAOD;QACD;;MAjNO;QAAA;QAAA,OAkNP,oBAAWrD,EAAX,EAAeZ,MAAf,EAAuB8E,SAAvB,EAAkCC,SAAlC,EAA6C;UAC3C,IAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;;UACA,IAAIvE,OAAO,CAACsE,MAAD,EAASpE,EAAT,EAAaZ,MAAb,CAAX,EAAiC;YAC/B,OAAOkF,OAAO,CAACC,OAAR,CAAgB;cACrBC,OAAO,EAAE,KADY;cAErBjF,OAAO,EAAE6E,MAAM,CAAC7E;YAFK,CAAhB,CAAP;UAID;;UACD,IAAIgF,OAAJ;UACA,IAAME,OAAO,GAAG,IAAIH,OAAJ,CAAY,UAAAI,CAAC;YAAA,OAAKH,OAAO,GAAGG,CAAf;UAAA,CAAb,CAAhB;UACA,IAAIC,MAAJ;UACA,IAAMC,UAAU,GAAG;YACjBC,SAAS,EAAE,KADM;YAEjBC,WAAW,EAAE,qBAAAC,UAAU,EAAI;cACzB,IAAIC,IAAJ;cACA,IAAMC,CAAC,GAAG,IAAIX,OAAJ,CAAY,UAAAI,CAAC;gBAAA,OAAKM,IAAI,GAAGN,CAAZ;cAAA,CAAb,CAAV;cACAH,OAAO,CAAC;gBACNC,OAAO,EAAE,IADH;gBAENjF,OAAO,EAAEwF,UAFH;gBAGNG,WAAW;kBAAA,8EAAE;oBAAA;sBAAA;wBAAA;0BAAA;4BACXF,IAAI;4BADO;4BAAA,OAELL,MAFK;;0BAAA;0BAAA;4BAAA;wBAAA;sBAAA;oBAAA;kBAAA,CAAF;;kBAAA;oBAAA;kBAAA;;kBAAA;gBAAA;cAHL,CAAD,CAAP;cAQA,OAAOM,CAAP;YACD;UAdgB,CAAnB;;UAgBA,IAAIf,SAAS,KAAK,MAAlB,EAA0B;YACxBS,MAAM,GAAG,KAAK1C,OAAL,CAAajC,EAAb,EAAiBZ,MAAjB,EAAyBwF,UAAzB,CAAT;UACD,CAFD,MAGK;YACH,IAAMO,cAAc,GAAG,KAAKxD,KAAL,CAAWyD,IAAX,CAAgB,UAAArE,CAAC;cAAA,OAAIjB,OAAO,CAACiB,CAAD,EAAIf,EAAJ,EAAQZ,MAAR,CAAX;YAAA,CAAjB,CAAvB;;YACA,IAAI+F,cAAJ,EAAoB;cAClBR,MAAM,GAAG,KAAKU,KAAL,CAAWF,cAAX,EAA2BhF,MAAM,CAACmF,MAAP,CAAcnF,MAAM,CAACmF,MAAP,CAAc,EAAd,EAAkBV,UAAlB,CAAd,EAA6C;gBAAEV,SAAS,EAAE,MAAb;gBAAqBqB,gBAAgB,EAAEpB;cAAvC,CAA7C,CAA3B,CAAT;YACD,CAFD,MAGK,IAAID,SAAS,KAAK,SAAlB,EAA6B;cAChCS,MAAM,GAAG,KAAKa,IAAL,CAAUxF,EAAV,EAAcZ,MAAd,EAAsBe,MAAM,CAACmF,MAAP,CAAcnF,MAAM,CAACmF,MAAP,CAAc,EAAd,EAAkBV,UAAlB,CAAd,EAA6C;gBAAEW,gBAAgB,EAAEpB;cAApB,CAA7C,CAAtB,CAAT;YACD,CAFI,MAGA,IAAID,SAAS,KAAK,MAAlB,EAA0B;cAC7BS,MAAM,GAAG,KAAK1C,OAAL,CAAajC,EAAb,EAAiBZ,MAAjB,EAAyBe,MAAM,CAACmF,MAAP,CAAcnF,MAAM,CAACmF,MAAP,CAAc,EAAd,EAAkBV,UAAlB,CAAd,EAA6C;gBAAEV,SAAS,EAAE,MAAb;gBAAqBtC,QAAQ,EAAE,IAA/B;gBAAqC2D,gBAAgB,EAAEpB;cAAvD,CAA7C,CAAzB,CAAT;YACD;UACF;;UACD,OAAOM,OAAP;QACD;QACD;;MA9PO;QAAA;QAAA;UAAA,6EA+PP;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBACQL,MADR,GACiB,KAAKC,aAAL,EADjB;oBAAA,kCAESD,MAAM,GACT;sBACApE,EAAE,EAAEoE,MAAM,CAAC7E,OAAP,CAAekG,OADnB;sBAEArG,MAAM,EAAEgF,MAAM,CAAChF,MAFf;sBAGAG,OAAO,EAAE6E,MAAM,CAAC7E;oBAHhB,CADS,GAMTM,SARN;;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CA/PO;;UAAA;YAAA;UAAA;;UAAA;QAAA;QAyQP;AACF;AACA;;MA3QS;QAAA;QAAA,OA4QP,qBAAY;UACV,OAAOyE,OAAO,CAACC,OAAR,CAAgB,KAAKF,aAAL,EAAhB,CAAP;QACD;QACD;AACF;AACA;AACA;AACA;;MAnRS;QAAA;QAAA,OAoRP,oBAAWqB,KAAX,EAAkB;UAChB,OAAOpB,OAAO,CAACC,OAAR,CAAgB,KAAK5C,KAAL,CAAW+D,KAAX,CAAhB,CAAP;QACD;QACD;AACF;AACA;AACA;AACA;;MA3RS;QAAA;QAAA,OA4RP,mBAAU3F,IAAV,EAAgB;UACd,OAAOuE,OAAO,CAACC,OAAR,CAAgB,KAAKoB,aAAL,CAAmB5F,IAAnB,CAAhB,CAAP;QACD;QACD;AACF;AACA;AACA;AACA;;MAnSS;QAAA;QAAA,OAoSP,qBAAYA,IAAZ,EAAkB;UAChB,OAAOuE,OAAO,CAACC,OAAR,CAAgB,KAAKqB,eAAL,CAAqB7F,IAArB,CAAhB,CAAP;QACD;MAtSM;QAAA;QAAA,OAuSP,qBAAY;UACV,OAAO,KAAK4B,KAAL,CAAWrB,MAAlB;QACD;MAzSM;QAAA;QAAA,OA0SP,yBAAgB;UACd,OAAO,KAAKqB,KAAL,CAAW,KAAKA,KAAL,CAAWrB,MAAX,GAAoB,CAA/B,CAAP;QACD;MA5SM;QAAA;QAAA,OA6SP,yBAA2C;UAAA,IAA7BP,IAA6B,uEAAtB,KAAKsE,aAAL,EAAsB;UACzC,OAAO,CAAC,EAAEtE,IAAI,IAAI,KAAK6F,eAAL,CAAqB7F,IAArB,CAAV,CAAR;QACD;MA/SM;QAAA;QAAA,OAgTP,2BAA6C;UAAA,IAA7BA,IAA6B,uEAAtB,KAAKsE,aAAL,EAAsB;;UAC3C,IAAI,CAACtE,IAAL,EAAW;YACT,OAAOF,SAAP;UACD;;UACD,IAAM8B,KAAK,GAAG,KAAKA,KAAnB;UACA,IAAM+D,KAAK,GAAG/D,KAAK,CAACkE,OAAN,CAAc9F,IAAd,CAAd;UACA,OAAO2F,KAAK,GAAG,CAAR,GAAY/D,KAAK,CAAC+D,KAAK,GAAG,CAAT,CAAjB,GAA+B7F,SAAtC;QACD,CAvTM,CAwTP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MAjUO;QAAA;QAAA;UAAA,4EAkUP,kBAAgBiG,EAAhB,EAAoBzC,IAApB;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA,MACM,KAAK5B,eAAL,IAAwBqE,EAAE,CAAC1C,IAAH,IAAW,IAAnC,IAA2C0C,EAAE,CAAC1C,IAAH,CAAQ2C,UADzD;sBAAA;sBAAA;oBAAA;;oBAAA,kCAEWzB,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAFX;;kBAAA;oBAIQE,OAJR,GAIkB,IAAIH,OAAJ,CAAY,UAACC,OAAD,EAAUyB,MAAV,EAAqB;sBAC/CF,EAAE,CAACvB,OAAH,GAAaA,OAAb;sBACAuB,EAAE,CAACE,MAAH,GAAYA,MAAZ;oBACD,CAHe,CAJlB;oBAQEF,EAAE,CAACzC,IAAH,GAAUA,IAAV;oBACA;AACJ;AACA;AACA;AACA;AACA;;oBAdE,MAeMyC,EAAE,CAAC1C,IAAH,IAAW0C,EAAE,CAAC1C,IAAH,CAAQyB,SAAR,KAAsB,KAAjC,IAA0C,KAAKrD,SAfrD;sBAAA;sBAAA;oBAAA;;oBAgBUyE,MAhBV,GAgBmB9D,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAhBnB;;oBAAA,KAiBQ6D,MAjBR;sBAAA;sBAAA;oBAAA;;oBAAA;oBAAA,OAkBkCA,MAAM,CAACC,aAAP,EAlBlC;;kBAAA;oBAkBYA,aAlBZ;;oBAAA,MAmBUA,aAAa,KAAK,KAnB5B;sBAAA;sBAAA;oBAAA;;oBAAA,kCAoBe5B,OAAO,CAACC,OAAR,CAAgB,KAAhB,CApBf;;kBAAA;oBAAA,MAsBe,OAAO2B,aAAP,KAAyB,QAtBxC;sBAAA;sBAAA;oBAAA;;oBAuBQD,MAAM,CAACT,IAAP,CAAYU,aAAZ,EAA2BJ,EAAE,CAAC1C,IAAH,CAAQc,SAAR,IAAqB,MAAhD;oBAvBR,kCAwBeI,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAxBf;;kBAAA;oBA4BE;oBACA,IAAIuB,EAAE,CAACtC,WAAH,IAAkBsC,EAAE,CAACtC,WAAH,CAAelD,MAAf,KAA0B,CAAhD,EAAmD;sBACjDwF,EAAE,CAACtC,WAAH,GAAiB3D,SAAjB;oBACD,CA/BH,CAgCE;;;oBACA,KAAKyB,UAAL,CAAgBkE,IAAhB,CAAqBM,EAArB,EAjCF,CAkCE;oBACA;;oBACA,KAAKK,QAAL;oBApCF,kCAqCS1B,OArCT;;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CAlUO;;UAAA;YAAA;UAAA;;UAAA;QAAA;MAAA;QAAA;QAAA,OAyWP,iBAAQ2B,MAAR,EAAgBN,EAAhB,EAAoB;UAClB,IAAI,KAAKpE,SAAT,EAAoB;YAClB,KAAK2E,SAAL,CAAe,8BAAf,EAA+CP,EAA/C;YACA;UACD;;UACD,IAAIA,EAAE,CAACzC,IAAP,EAAa;YACXyC,EAAE,CAACzC,IAAH,CAAQ+C,MAAM,CAACE,YAAf,EAA6BF,MAAM,CAACG,kBAApC,EAAwDH,MAAM,CAACI,YAA/D,EAA6EJ,MAAM,CAACK,WAApF,EAAiGL,MAAM,CAAClC,SAAxG;UACD;;UACD4B,EAAE,CAACvB,OAAH,CAAW6B,MAAM,CAACE,YAAlB;;UACA,IAAIR,EAAE,CAAC1C,IAAH,CAAQyB,SAAR,KAAsB,KAAtB,IAA+B,KAAKrD,SAAxC,EAAmD;YACjD,IAAMyE,MAAM,GAAG9D,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;;YACA,IAAI6D,MAAJ,EAAY;cACV,IAAM/B,SAAS,GAAGkC,MAAM,CAAClC,SAAP,KAAqB,MAArB,GAA8B,MAA9B,GAAuC,SAAzD;cACA+B,MAAM,CAACS,UAAP,CAAkBxC,SAAlB;YACD;UACF;QACF;MAzXM;QAAA;QAAA,OA0XP,gBAAOyC,YAAP,EAAqBb,EAArB,EAAyB;UACvB,IAAI,KAAKpE,SAAT,EAAoB;YAClB,KAAK2E,SAAL,CAAe,8BAAf,EAA+CP,EAA/C;YACA;UACD;;UACD,KAAKxE,UAAL,CAAgBhB,MAAhB,GAAyB,CAAzB;UACA,KAAK+F,SAAL,CAAeM,YAAf,EAA6Bb,EAA7B;QACD;MAjYM;QAAA;QAAA,OAkYP,mBAAUa,YAAV,EAAwBb,EAAxB,EAA4B;UAC1B,IAAIA,EAAE,CAACzC,IAAP,EAAa;YACXyC,EAAE,CAACzC,IAAH,CAAQ,KAAR,EAAe,KAAf,EAAsBsD,YAAtB;UACD;;UACD,IAAIb,EAAE,CAACE,MAAH,IAAa,CAAC,KAAKtE,SAAvB,EAAkC;YAChCoE,EAAE,CAACE,MAAH,CAAUW,YAAV;UACD,CAFD,MAGK;YACHb,EAAE,CAACvB,OAAH,CAAW,KAAX;UACD;QACF;MA5YM;QAAA;QAAA,OA6YP,oBAAW;UACT;UACA;UACA,IAAI,KAAK9C,eAAT,EAA0B;YACxB,OAAO,KAAP;UACD,CALQ,CAMT;UACA;;;UACA,IAAMqE,EAAE,GAAG,KAAKxE,UAAL,CAAgBsF,KAAhB,EAAX;;UACA,IAAI,CAACd,EAAL,EAAS;YACP,OAAO,KAAP;UACD;;UACD,KAAKe,aAAL,CAAmBf,EAAnB;UACA,OAAO,IAAP;QACD;MA3ZM;QAAA;QAAA;UAAA,gFA4ZP,kBAAoBA,EAApB;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAEI;oBACA,KAAK1E,gBAAL,CAAsBqB,IAAtB;oBACA,KAAKhB,eAAL,GAAuB,IAAvB;oBACA,KAAKqF,SAAL,CAAehB,EAAf;oBACMW,WANV,GAMwB,KAAKpC,aAAL,EANxB;oBAOUmC,YAPV,GAOyB,KAAKO,eAAL,CAAqBjB,EAArB,EAAyBW,WAAzB,CAPzB;;oBAAA,MAQQ,CAACA,WAAD,IAAgB,CAACD,YARzB;sBAAA;sBAAA;oBAAA;;oBAAA,MASY,IAAIQ,KAAJ,CAAU,qCAAV,CATZ;;kBAAA;oBAAA,MAWQR,YAAY,IAAIA,YAAY,CAACnH,KAAb,KAAuBN,cAX/C;sBAAA;sBAAA;oBAAA;;oBAAA;oBAAA,OAYYyH,YAAY,CAACS,IAAb,CAAkB,KAAK5E,EAAvB,CAZZ;;kBAAA;oBAcI,KAAK6E,YAAL,CAAkBV,YAAlB,EAAgCC,WAAhC,EAA6CX,EAA7C,EAdJ,CAeI;;oBACMS,kBAhBV,GAgB+B,CAACT,EAAE,CAACqB,0BAAH,IAAiCrB,EAAE,CAACsB,yBAArC,KACzBZ,YAAY,KAAKC,WAjBvB;;oBAkBI,IAAIF,kBAAkB,IAAIT,EAAE,CAAC1C,IAAzB,IAAiCqD,WAArC,EAAkD;sBAC1CY,eAD0C,GACxBvB,EAAE,CAAC1C,IAAH,CAAQc,SAAR,KAAsB,MADE;sBAEhD;AACR;AACA;AACA;;sBACQ,IAAImD,eAAJ,EAAqB;wBACnBvB,EAAE,CAAC1C,IAAH,CAAQmC,gBAAR,GAA2BO,EAAE,CAAC1C,IAAH,CAAQmC,gBAAR,IAA6BiB,YAAY,IAAIA,YAAY,CAACjB,gBAArF;sBACD;;sBACDkB,WAAW,CAAClB,gBAAZ,GAA+BO,EAAE,CAAC1C,IAAH,CAAQmC,gBAAvC;oBACD;;oBA5BL,KA6BmBgB,kBA7BnB;sBAAA;sBAAA;oBAAA;;oBAAA;oBAAA,OA8Bc,KAAKe,UAAL,CAAgBd,YAAhB,EAA8BC,WAA9B,EAA2CX,EAA3C,CA9Bd;;kBAAA;oBAAA;oBAAA;oBAAA;;kBAAA;oBAAA,eA+BQ;sBACA;sBACA;sBACA;sBACA;sBACAQ,YAAY,EAAE,IALd;sBAMAC,kBAAkB,EAAE;oBANpB,CA/BR;;kBAAA;oBA6BUH,MA7BV;oBAuCI,KAAKmB,OAAL,CAAanB,MAAb,EAAqBN,EAArB;oBACA,KAAKzE,eAAL,CAAqBoB,IAArB;oBAxCJ;oBAAA;;kBAAA;oBAAA;oBAAA;oBA2CI,KAAK+E,MAAL,eAA0B1B,EAA1B;;kBA3CJ;oBA6CE,KAAKrE,eAAL,GAAuB,KAAvB;oBACA,KAAK0E,QAAL;;kBA9CF;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CA5ZO;;UAAA;YAAA;UAAA;;UAAA;QAAA;MAAA;QAAA;QAAA,OA4cP,mBAAUL,EAAV,EAAc;UACZ,IAAM2B,WAAW,GAAG,KAAK9F,KAAL,CAAWrB,MAA/B;UACAwF,EAAE,CAAC1C,IAAH,GAAU0C,EAAE,CAAC1C,IAAH,IAAW,EAArB;;UACA,IAAI0C,EAAE,CAAC1C,IAAH,CAAQ5D,QAAR,KAAqBK,SAAzB,EAAoC;YAClCiG,EAAE,CAAC1C,IAAH,CAAQ5D,QAAR,GAAmB,KAAKA,QAAxB;UACD;;UACD,IAAIsG,EAAE,CAAC/B,UAAH,KAAkBlE,SAAtB,EAAiC;YAC/B,+DAAOiG,EAAE,CAACnC,WAAH,KAAmB9D,SAA1B,EAAqC,8BAArC;YACA,+DAAOiG,EAAE,CAAClC,WAAH,KAAmB/D,SAA1B,EAAqC,8BAArC;YACA,IAAM6F,KAAK,GAAG,KAAK/D,KAAL,CAAWkE,OAAX,CAAmBC,EAAE,CAAC/B,UAAtB,CAAd;;YACA,IAAI2B,KAAK,GAAG,CAAZ,EAAe;cACb,MAAM,IAAIsB,KAAJ,CAAU,0BAAV,CAAN;YACD;;YACDlB,EAAE,CAACnC,WAAH,IAAkB+B,KAAlB;UACD;;UACD,IAAII,EAAE,CAACnC,WAAH,KAAmB9D,SAAvB,EAAkC;YAChC,IAAIiG,EAAE,CAACnC,WAAH,GAAiB,CAArB,EAAwB;cACtBmC,EAAE,CAACnC,WAAH,GAAiB8D,WAAW,GAAG,CAA/B;YACD;;YACD,IAAI3B,EAAE,CAAClC,WAAH,GAAiB,CAArB,EAAwB;cACtBkC,EAAE,CAAClC,WAAH,GAAiB6D,WAAW,GAAG3B,EAAE,CAACnC,WAAlC;YACD;;YACDmC,EAAE,CAACsB,yBAAH,GACEtB,EAAE,CAAClC,WAAH,GAAiB,CAAjB,IAAsBkC,EAAE,CAACnC,WAAH,GAAiBmC,EAAE,CAAClC,WAApB,KAAoC6D,WAD5D;UAED;;UACD,IAAI3B,EAAE,CAACtC,WAAP,EAAoB;YAClB;YACA;YACA,IAAIsC,EAAE,CAACvC,WAAH,GAAiB,CAAjB,IAAsBuC,EAAE,CAACvC,WAAH,GAAiBkE,WAA3C,EAAwD;cACtD3B,EAAE,CAACvC,WAAH,GAAiBkE,WAAjB;YACD;;YACD3B,EAAE,CAACqB,0BAAH,GAAgCrB,EAAE,CAACvC,WAAH,KAAmBkE,WAAnD;UACD;;UACD,IAAMjE,WAAW,GAAGsC,EAAE,CAACtC,WAAvB;;UACA,IAAI,CAACA,WAAL,EAAkB;YAChB;UACD;;UACD,+DAAOA,WAAW,CAAClD,MAAZ,GAAqB,CAA5B,EAA+B,wBAA/B;UACA,IAAMoH,eAAe,GAAGhH,cAAc,CAAC8C,WAAD,CAAtC;;UACA,IAAIkE,eAAe,CAACpH,MAAhB,KAA2B,CAA/B,EAAkC;YAChC,MAAM,IAAI0G,KAAJ,CAAU,yBAAV,CAAN;UACD,CAzCW,CA0CZ;;;UA1CY,4CA2COU,eA3CP;UAAA;;UAAA;YA2CZ,uDAAoC;cAAA,IAAzB3H,IAAyB;cAClCA,IAAI,CAACP,QAAL,GAAgBsG,EAAE,CAAC1C,IAAH,CAAQ5D,QAAxB;cACA,IAAMI,GAAG,GAAGG,IAAI,CAACH,GAAjB;;cACA,IAAIA,GAAG,IAAIA,GAAG,KAAK,IAAnB,EAAyB;gBACvB,MAAM,IAAIoH,KAAJ,CAAU,oCAAV,CAAN;cACD;;cACD,IAAIjH,IAAI,CAACV,KAAL,KAAeJ,oBAAnB,EAAyC;gBACvC,MAAM,IAAI+H,KAAJ,CAAU,qCAAV,CAAN;cACD;YACF;UApDW;YAAA;UAAA;YAAA;UAAA;;UAqDZlB,EAAE,CAACtC,WAAH,GAAiBkE,eAAjB;QACD;MAlgBM;QAAA;QAAA,OAmgBP,yBAAgB5B,EAAhB,EAAoBW,WAApB,EAAiC;UAC/B,IAAMjD,WAAW,GAAGsC,EAAE,CAACtC,WAAvB;;UACA,IAAIA,WAAW,KAAK3D,SAApB,EAA+B;YAC7B;YACA;YACA,OAAO2D,WAAW,CAACA,WAAW,CAAClD,MAAZ,GAAqB,CAAtB,CAAlB;UACD;;UACD,IAAMqD,WAAW,GAAGmC,EAAE,CAACnC,WAAvB;;UACA,IAAIA,WAAW,KAAK9D,SAApB,EAA+B;YAC7B,IAAM8B,KAAK,GAAG,KAAKA,KAAnB;YACA,IAAMgG,SAAS,GAAGhE,WAAW,GAAGmC,EAAE,CAAClC,WAAnC;;YACA,KAAK,IAAIgE,CAAC,GAAGjG,KAAK,CAACrB,MAAN,GAAe,CAA5B,EAA+BsH,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;cAC1C,IAAM7H,IAAI,GAAG4B,KAAK,CAACiG,CAAD,CAAlB;;cACA,IAAI,CAACA,CAAC,GAAGjE,WAAJ,IAAmBiE,CAAC,IAAID,SAAzB,KAAuC5H,IAAI,KAAK0G,WAApD,EAAiE;gBAC/D,OAAO1G,IAAP;cACD;YACF;UACF;;UACD,OAAOF,SAAP;QACD;MAthBM;QAAA;QAAA,OAuhBP,sBAAa2G,YAAb,EAA2BC,WAA3B,EAAwCX,EAAxC,EAA4C;UAC1C,+DAAOW,WAAW,IAAID,YAAtB,EAAoC,4CAApC;UACA,+DAAOV,EAAE,CAACvB,OAAV,EAAmB,uBAAnB;UACA,+DAAOuB,EAAE,CAACE,MAAV,EAAkB,sBAAlB;UACA,IAAM5C,IAAI,GAAG0C,EAAE,CAAC1C,IAAhB;UACA,IAAMI,WAAW,GAAGsC,EAAE,CAACtC,WAAvB;UACA,IAAMG,WAAW,GAAGmC,EAAE,CAACnC,WAAvB;UACA,IAAMC,WAAW,GAAGkC,EAAE,CAAClC,WAAvB;UACA,IAAIiE,YAAJ,CAR0C,CAS1C;;UACA,IAAIlE,WAAW,KAAK9D,SAAhB,IAA6B+D,WAAW,KAAK/D,SAAjD,EAA4D;YAC1D,+DAAO8D,WAAW,IAAI,CAAtB,EAAyB,iCAAzB;YACA,+DAAOC,WAAW,IAAI,CAAtB,EAAyB,iCAAzB;YACAiE,YAAY,GAAG,EAAf;;YACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhE,WAApB,EAAiCgE,CAAC,EAAlC,EAAsC;cACpC,IAAM7H,IAAI,GAAG,KAAK4B,KAAL,CAAWiG,CAAC,GAAGjE,WAAf,CAAb;;cACA,IAAI5D,IAAI,IAAIA,IAAI,KAAKyG,YAAjB,IAAiCzG,IAAI,KAAK0G,WAA9C,EAA2D;gBACzDoB,YAAY,CAACrC,IAAb,CAAkBzF,IAAlB;cACD;YACF,CATyD,CAU1D;;;YACAqD,IAAI,CAACc,SAAL,GAAiBd,IAAI,CAACc,SAAL,IAAkB,MAAnC;UACD;;UACD,IAAM4D,YAAY,GAAG,KAAKnG,KAAL,CAAWrB,MAAX,IAClBkD,WAAW,KAAK3D,SAAhB,GAA4B2D,WAAW,CAAClD,MAAxC,GAAiD,CAD/B,KAElBsD,WAAW,KAAK/D,SAAhB,GAA4B+D,WAA5B,GAA0C,CAFxB,CAArB;UAGA,+DAAOkE,YAAY,IAAI,CAAvB,EAA0B,mCAA1B;;UACA,IAAIA,YAAY,KAAK,CAArB,EAAwB;YACtBC,OAAO,CAACC,IAAR,yGAAqH,IAArH,EAA2H,KAAK3F,EAAhI;YACA,MAAM,IAAI2E,KAAJ,CAAU,+CAAV,CAAN;UACD,CA9ByC,CA+B1C;UACA;;;UACA,IAAIxD,WAAJ,EAAiB;YACf;YACA,IAAIC,WAAW,GAAGqC,EAAE,CAACvC,WAArB;;YAFe,4CAGIC,WAHJ;YAAA;;YAAA;cAGf,uDAAgC;gBAAA,IAArBzD,KAAqB;gBAC9B,KAAKkI,YAAL,CAAkBlI,KAAlB,EAAwB0D,WAAxB;gBACAA,WAAW;cACZ;YANc;cAAA;YAAA;cAAA;YAAA;;YAOf,IAAIqC,EAAE,CAACqB,0BAAP,EAAmC;cACjC;cACA/D,IAAI,CAACc,SAAL,GAAiBd,IAAI,CAACc,SAAL,IAAkB,SAAnC;YACD;UACF,CA5CyC,CA6C1C;UACA;UACA;UACA;UACA;;;UACA,IAAI2D,YAAY,IAAIA,YAAY,CAACvH,MAAb,GAAsB,CAA1C,EAA6C;YAAA,4CACxBuH,YADwB;YAAA;;YAAA;cAC3C,uDAAiC;gBAAA,IAAtB9H,MAAsB;gBAC/B,6DAAUA,MAAI,CAACR,OAAf,EAAwB,oDAAxB;gBACA,6DAAUQ,MAAI,CAACR,OAAf,EAAwB,oDAAxB;gBACA,6DAAUQ,MAAI,CAACR,OAAf,EAAwB,oDAAxB;cACD,CAL0C,CAM3C;;YAN2C;cAAA;YAAA;cAAA;YAAA;;YAAA,4CAOxBsI,YAPwB;YAAA;;YAAA;cAO3C,uDAAiC;gBAAA,IAAtB9H,MAAsB;gBAC/B,KAAKmI,WAAL,CAAiBnI,MAAjB;cACD;YAT0C;cAAA;YAAA;cAAA;YAAA;UAU5C;QACF;MAplBM;QAAA;QAAA;UAAA,6EAqlBP,kBAAiByG,YAAjB,EAA+BC,WAA/B,EAA4CX,EAA5C;YAAA;;YAAA;;YAAA;cAAA;gBAAA;kBAAA;oBACE;oBACA;oBACM1C,IAHR,GAGe0C,EAAE,CAAC1C,IAHlB;oBAIQ+E,gBAJR,GAI2B/E,IAAI,CAACgF,iBAAL,GACrB,UAACC,GAAD;sBAAA,OAAS,KAAI,CAACC,KAAL,GAAaD,GAAtB;oBAAA,CADqB,GAErBxI,SANN;oBAOQ0C,IAPR,GAOe,oEAAW,IAAX,CAPf;oBAQQwC,UARR,GAQqByB,YAAY,CAACjH,OARlC;oBASQgJ,SATR,GASoB9B,WAAW,IAAIA,WAAW,CAAClH,OAT/C;oBAUQiJ,aAVR,GAUwBrI,MAAM,CAACmF,MAAP,CAAcnF,MAAM,CAACmF,MAAP,CAAc;sBAAE/C,IAAI,EAAJA,IAAF;sBAAQkG,UAAU,EAAE,KAAK9C,aAAL,CAAmBa,YAAnB,CAApB;sBAAsDkC,MAAM,EAAE,KAAKrG,EAAnE;sBAAuE8F,gBAAgB,EAAhBA,gBAAvE;sBAAyFvG,QAAQ,EAAE,KAAKA,QAAL,IAAiB,4DAAOY,UAAP,CAAkB,UAAlB,EAA8B,IAA9B,CAApH;sBAAyJuC,UAAU,EAAVA,UAAzJ;sBAChDwD,SAAS,EAATA;oBADgD,CAAd,EACrBnF,IADqB,CAAd,EACA;sBAAEmC,gBAAgB,EAAEnC,IAAI,CAACmC,gBAAL,IAAyB,KAAKpB,SAA9B,IAA2C,4DAAOwE,GAAP,CAAW,cAAX;oBAA/D,CADA,CAVxB;oBAAA;oBAAA,OAYiC,6DAAWH,aAAX,CAZjC;;kBAAA;oBAAA;oBAYUlC,YAZV,iBAYUA,YAZV;oBAAA,kCAaS,KAAKsC,gBAAL,CAAsBtC,YAAtB,EAAoCE,YAApC,EAAkDC,WAAlD,EAA+DrD,IAA/D,CAbT;;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CArlBO;;UAAA;YAAA;UAAA;;UAAA;QAAA;MAAA;QAAA;QAAA,OAomBP,0BAAiBkD,YAAjB,EAA+BE,YAA/B,EAA6CC,WAA7C,EAA0DrD,IAA1D,EAAgE;UAC9D,IAAMyF,WAAW,GAAGvC,YAAY,GAAGE,YAAH,GAAkBC,WAAlD;;UACA,IAAIoC,WAAJ,EAAiB;YACf,KAAKC,OAAL,CAAaD,WAAb;UACD;;UACD,OAAO;YACLvC,YAAY,EAAZA,YADK;YAELC,kBAAkB,EAAE,IAFf;YAGLC,YAAY,EAAZA,YAHK;YAILC,WAAW,EAAXA,WAJK;YAKLvC,SAAS,EAAEd,IAAI,CAACc;UALX,CAAP;QAOD;MAhnBM;QAAA;QAAA,OAinBP,sBAAanE,IAAb,EAAmB2F,KAAnB,EAA0B;UACxB,IAAM/D,KAAK,GAAG,KAAKA,KAAnB;UACA,IAAMoH,aAAa,GAAGpH,KAAK,CAACkE,OAAN,CAAc9F,IAAd,CAAtB;;UACA,IAAIgJ,aAAa,GAAG,CAAC,CAArB,EAAwB;YACtB;YACA;YACA,+DAAOhJ,IAAI,CAACH,GAAL,KAAa,IAApB,EAA0B,6BAA1B;YACA+B,KAAK,CAACqH,MAAN,CAAatD,KAAb,EAAoB,CAApB,EAAuB/D,KAAK,CAACqH,MAAN,CAAaD,aAAb,EAA4B,CAA5B,EAA+B,CAA/B,CAAvB;UACD,CALD,MAMK;YACH,+DAAO,CAAChJ,IAAI,CAACH,GAAb,EAAkB,aAAlB,EADG,CAEH;YACA;;YACAG,IAAI,CAACH,GAAL,GAAW,IAAX,CAJG,CAKH;;YACA+B,KAAK,CAACqH,MAAN,CAAatD,KAAb,EAAoB,CAApB,EAAuB3F,IAAvB;UACD;QACF;MAloBM;QAAA;QAAA,OAmoBP,oBAAWA,IAAX,EAAiB;UACf,+DAAOA,IAAI,CAACV,KAAL,KAAeL,mBAAf,IAAsCe,IAAI,CAACV,KAAL,KAAeJ,oBAA5D,EAAkF,0CAAlF;UACA,IAAM0C,KAAK,GAAG,KAAKA,KAAnB;UACA,IAAM+D,KAAK,GAAG/D,KAAK,CAACkE,OAAN,CAAc9F,IAAd,CAAd;UACA,+DAAO2F,KAAK,GAAG,CAAC,CAAhB,EAAmB,gCAAnB;;UACA,IAAIA,KAAK,IAAI,CAAb,EAAgB;YACd/D,KAAK,CAACqH,MAAN,CAAatD,KAAb,EAAoB,CAApB;UACD;QACF;MA3oBM;QAAA;QAAA,OA4oBP,qBAAY3F,IAAZ,EAAkB;UAChBA,IAAI,CAACmD,QAAL;;UACA,KAAKa,UAAL,CAAgBhE,IAAhB;QACD;QACD;AACF;AACA;;MAlpBS;QAAA;QAAA,OAmpBP,iBAAQkJ,UAAR,EAAoB;UAClB;UACA;UACA;UACA,IAAI,KAAKvH,SAAT,EAAoB;YAClB;UACD;;UACD,IAAMC,KAAK,GAAG,KAAKA,KAAnB;UACA,IAAMuH,eAAe,GAAGvH,KAAK,CAACkE,OAAN,CAAcoD,UAAd,CAAxB;;UACA,KAAK,IAAIrB,CAAC,GAAGjG,KAAK,CAACrB,MAAN,GAAe,CAA5B,EAA+BsH,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;YAC1C,IAAM7H,IAAI,GAAG4B,KAAK,CAACiG,CAAD,CAAlB;YACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;YACM,IAAMrI,OAAO,GAAGQ,IAAI,CAACR,OAArB;;YACA,IAAIA,OAAJ,EAAa;cACX,IAAIqI,CAAC,GAAGsB,eAAR,EAAyB;gBACvB;gBACA;gBACA,6DAAU3J,OAAV,EAAmB,oDAAnB;gBACA,KAAK2I,WAAL,CAAiBnI,IAAjB;cACD,CALD,MAMK,IAAI6H,CAAC,GAAGsB,eAAR,EAAyB;gBAC5B;gBACA;gBACA,6DAAc3J,OAAd,EAAuB,IAAvB;cACD;YACF;UACF;QACF;MArrBM;QAAA;QAAA,OAsrBP,oBAAW;UACT,OAAQ,CAAC,CAAC,KAAKwC,YAAP,IACN,CAAC,KAAKN,eADA,IAEN,KAAKH,UAAL,CAAgBhB,MAAhB,KAA2B,CAFrB,IAGN,KAAKiB,gBAHC,IAIN,KAAKoE,aAAL,EAJF;QAKD;MA5rBM;QAAA;QAAA,OA6rBP,mBAAU;UACR,KAAKrC,SAAL,CAAe;YACbK,WAAW,EAAE,CAAC,CADD;YAEbC,WAAW,EAAE,CAFA;YAGbR,IAAI,EAAE;cACJc,SAAS,EAAE,MADP;cAEJkE,iBAAiB,EAAE;YAFf;UAHO,CAAf,EAOGvI,SAPH;QAQD;MAtsBM;QAAA;QAAA,OAusBP,gBAAOsJ,SAAP,EAAkB;UAChB,IAAI,KAAKb,KAAT,EAAgB;YACd,KAAKA,KAAL,CAAWc,YAAX,CAAwBD,SAAxB;UACD;QACF;MA3sBM;QAAA;QAAA,OA4sBP,eAAME,cAAN,EAAsBF,SAAtB,EAAiCG,GAAjC,EAAsC;UAAA;;UACpC,IAAI,KAAKhB,KAAT,EAAgB;YACd,KAAK/G,gBAAL,GAAwB,KAAxB;YACA,KAAK+G,KAAL,CAAWiB,QAAX,CAAoB,YAAM;cACxB,MAAI,CAAChI,gBAAL,GAAwB,IAAxB;YACD,CAFD,EAEG;cAAEiI,eAAe,EAAE;YAAnB,CAFH,EAFc,CAKd;;YACA,IAAIC,YAAY,GAAIJ,cAAD,GAAmB,CAAC,KAApB,GAA4B,KAA/C;YACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;YACM,IAAI,CAACA,cAAL,EAAqB;cACnB,KAAKf,KAAL,CAAWoB,MAAX,CAAkB,gCAAlB;cACAD,YAAY,IAAI,oEAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxB,EAAgC,CAAC,CAAD,EAAI,CAAJ,CAAhC,EAAwC,CAAC,IAAD,EAAO,IAAP,CAAxC,EAAsD,CAAC,CAAD,EAAI,CAAJ,CAAtD,EAA8DN,SAA9D,EAAyE,CAAzE,CAAhB;YACD,CAHD,MAIK;cACHM,YAAY,IAAI,oEAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxB,EAAgC,CAAC,IAAD,EAAO,IAAP,CAAhC,EAA8C,CAAC,CAAD,EAAI,CAAJ,CAA9C,EAAsD,CAAC,CAAD,EAAI,CAAJ,CAAtD,EAA8DN,SAA9D,EAAyE,CAAzE,CAAhB;YACD;;YACD,KAAKb,KAAL,CAAWqB,WAAX,CAAuBN,cAAc,GAAG,CAAH,GAAO,CAA5C,EAA+CI,YAA/C,EAA6DH,GAA7D;UACD;QACF;MAruBM;QAAA;QAAA,OAsuBP,kBAAS;UACP,OAAQ,6DAAE,MAAF,EAAU,IAAV,CAAR;QACD;MAxuBM;QAAA;QAAA,KAyuBP,eAAS;UAAE,OAAO,6DAAW,IAAX,CAAP;QAA0B;MAzuB9B;QAAA;QAAA,KA0uBP,eAAsB;UAAE,OAAO;YAC7B,gBAAgB,CAAC,qBAAD,CADa;YAE7B,QAAQ,CAAC,aAAD;UAFqB,CAAP;QAGpB;MA7uBG;;MAAA;IAAA,GAAT;;IA+uBArI,GAAG,CAAC2I,KAAJ,GAAY5I,MAAZ;;IAEA,IAAM6I,OAAO,GAAG,SAAVA,OAAU,CAACxH,EAAD,EAAKyH,eAAL,EAAsB3K,SAAtB,EAAiC0B,cAAjC,EAAiDkJ,eAAjD,EAAqE;MACnF,IAAMnK,GAAG,GAAGyC,EAAE,CAACC,OAAH,CAAW,SAAX,CAAZ;;MACA,IAAI1C,GAAJ,EAAS;QACP,IAAIkK,eAAe,KAAK,SAAxB,EAAmC;UACjC,IAAI3K,SAAS,KAAKU,SAAlB,EAA6B;YAC3B,OAAOD,GAAG,CAAC4F,IAAJ,CAASrG,SAAT,EAAoB0B,cAApB,EAAoC;cAAEkF,UAAU,EAAE,IAAd;cAAoBR,gBAAgB,EAAEwE;YAAtC,CAApC,CAAP;UACD;QACF,CAJD,MAKK,IAAID,eAAe,KAAK,MAAxB,EAAgC;UACnC,IAAI3K,SAAS,KAAKU,SAAlB,EAA6B;YAC3B,OAAOD,GAAG,CAACqC,OAAJ,CAAY9C,SAAZ,EAAuB0B,cAAvB,EAAuC;cAAEkF,UAAU,EAAE,IAAd;cAAoBR,gBAAgB,EAAEwE;YAAtC,CAAvC,CAAP;UACD;QACF,CAJI,MAKA,IAAID,eAAe,KAAK,MAAxB,EAAgC;UACnC,OAAOlK,GAAG,CAACoK,GAAJ,CAAQ;YAAEjE,UAAU,EAAE,IAAd;YAAoBR,gBAAgB,EAAEwE;UAAtC,CAAR,CAAP;QACD;MACF;;MACD,OAAOzF,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;IACD,CAlBD;;IAoBA,IAAM0F,OAAO;MACX,iBAAY/I,OAAZ,EAAqB;QAAA;;QAAA;;QACnB,6DAAiB,IAAjB,EAAuBA,OAAvB;QACA;AACJ;AACA;;QACI,KAAK4I,eAAL,GAAuB,SAAvB;;QACA,KAAKI,OAAL,GAAe,YAAM;UACnB,OAAOL,OAAO,CAAC,MAAI,CAACxH,EAAN,EAAU,MAAI,CAACyH,eAAf,EAAgC,MAAI,CAAC3K,SAArC,EAAgD,MAAI,CAAC0B,cAArD,EAAqE,MAAI,CAACkJ,eAA1E,CAAd;QACD,CAFD;MAGD;;MAVU;QAAA;QAAA,OAWX,kBAAS;UACP,OAAQ,6DAAE,oDAAF,EAAQ;YAAEG,OAAO,EAAE,KAAKA;UAAhB,CAAR,CAAR;QACD;MAbU;QAAA;QAAA,KAcX,eAAS;UAAE,OAAO,6DAAW,IAAX,CAAP;QAA0B;MAd1B;;MAAA;IAAA,GAAb","file":"21-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\nimport { b as getIonMode, c as config } from './ionic-global-63a97a32.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { m as assert } from './helpers-1457892a.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-a7711c1e.js';\nimport { a as attachComponent } from './framework-delegate-94e770cc.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  const currentParams = view.params;\n  if (currentParams === params) {\n    return true;\n  }\n  if (!currentParams && !params) {\n    return true;\n  }\n  if (!currentParams || !params) {\n    return false;\n  }\n  const keysA = Object.keys(currentParams);\n  const keysB = Object.keys(params);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  // Test for A's keys different from B.\n  for (const key of keysA) {\n    if (currentParams[key] !== params[key]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages.map(page => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      /**\n       * TODO Ionic 6:\n       * Consider switching to just using `undefined` here\n       * as well as on the public interfaces and on\n       * `NavComponentWithProps`. Previously `pages` was\n       * of type `any[]` so TypeScript did not catch this.\n       */\n      return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  }).filter(v => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\n\nconst Nav = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.animationEnabled = true;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    /**\n     * If `true`, the nav should animate the transition of components.\n     */\n    this.animated = true;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    if (this.root !== undefined) {\n      if (!this.useRouter) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n  }\n  componentWillLoad() {\n    this.useRouter =\n      !!document.querySelector('ion-router') &&\n        !this.el.closest('[no-router]');\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back-1bbd08e0.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    // release swipe back gesture and transition\n    this.transInstr.length = this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: -1,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: [{ component, componentProps }],\n      opts\n    }, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts\n    }, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const tiConfig = {\n      removeStart: -1,\n      removeCount: -1,\n      opts\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      tiConfig.removeView = indexOrViewCtrl;\n      tiConfig.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      tiConfig.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(tiConfig, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.queueTrns({\n      removeStart: 1,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    if (opts == null) {\n      opts = {};\n    }\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts\n    }, done);\n  }\n  /** @internal */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element\n      });\n    }\n    let resolve;\n    const promise = new Promise(r => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: enteringEl => {\n        let mark;\n        const p = new Promise(r => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          }\n        });\n        return p;\n      }\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      const viewController = this.views.find(v => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /** @internal */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    return active\n      ? {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element\n      }\n      : undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  getActive() {\n    return Promise.resolve(this.getActiveSync());\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  getByIndex(index) {\n    return Promise.resolve(this.views[index]);\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  canGoBack(view) {\n    return Promise.resolve(this.canGoBackSync(view));\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  getPrevious(view) {\n    return Promise.resolve(this.getPreviousSync(view));\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n  // 1. _nextTrns(): consumes the next transition in the queue\n  // 2. _viewInit(): initializes enteringView if required\n  // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n  // 4. _postViewInit(): add/remove the views from the navigation stack\n  // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n  // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n  // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n  // 8. _transitionFinish(): called once the transition finishes\n  // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n  async queueTrns(ti, done) {\n    if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n      return Promise.resolve(false);\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return Promise.resolve(false);\n        }\n        else if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return Promise.resolve(false);\n        }\n      }\n    }\n    // Normalize empty\n    if (ti.insertViews && ti.insertViews.length === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now\n    // get the next instruction\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n        enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      const result = requiresTransition\n        ? await this.transition(enteringView, leavingView, ti)\n        : {\n          // transition is not required, so we are already done!\n          // they're inserting/removing the views somewhere in the middle or\n          // beginning, so visually nothing needs to animate/transition\n          // resolve immediately because there's no animation that's happening\n          hasCompleted: true,\n          requiresTransition: false\n        };\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    const viewsLength = this.views.length;\n    ti.opts = ti.opts || {};\n    if (ti.opts.delegate === undefined) {\n      ti.opts.delegate = this.delegate;\n    }\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition =\n        ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  getEnteringView(ti, leavingView) {\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      // grab the very last view of the views to be inserted\n      // and initialize it as the new entering view\n      return insertViews[insertViews.length - 1];\n    }\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  postViewInit(enteringView, leavingView, ti) {\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    const opts = ti.opts;\n    const insertViews = ti.insertViews;\n    const removeStart = ti.removeStart;\n    const removeCount = ti.removeCount;\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = 0; i < removeCount; i++) {\n        const view = this.views[i + removeStart];\n        if (view && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      opts.direction = opts.direction || 'back';\n    }\n    const finalBalance = this.views.length +\n      (insertViews !== undefined ? insertViews.length : 0) -\n      (removeCount !== undefined ? removeCount : 0);\n    assert(finalBalance >= 0, 'final balance can not be negative');\n    if (finalBalance === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // there are views to insert\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        opts.direction = opts.direction || 'forward';\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation\n      ? (ani) => this.sbAni = ani\n      : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    const cleanupView = hasCompleted ? enteringView : leavingView;\n    if (cleanupView) {\n      this.cleanup(cleanupView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction\n    };\n  }\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      // this view is already in the stack!!\n      // move it to its new location\n      assert(view.nav === this, 'view is not part of the nav');\n      views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      // insert the entering view into the correct index in the stack\n      views.splice(index, 0, view);\n    }\n  }\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * DOM WRITE\n   */\n  cleanup(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.animationEnabled &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.queueTrns({\n      removeStart: -1,\n      removeCount: 1,\n      opts: {\n        direction: 'back',\n        progressAnimation: true\n      }\n    }, undefined);\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.animationEnabled = false;\n      this.sbAni.onFinish(() => {\n        this.animationEnabled = true;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = (shouldComplete) ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n  }\n  render() {\n    return (h(\"slot\", null));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n};\nNav.style = navCss;\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return (h(Host, { onClick: this.onClick }));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"]}