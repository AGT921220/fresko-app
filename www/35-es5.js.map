{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"names":["splitPaneIosCss","splitPaneMdCss","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","hostRef","ionSplitPaneVisible","visible","disabled","when","detail","isPane","bind","emit","styleChildren","updateState","rmL","undefined","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","mode","toAdd","toRemove","add","remove","style","ios","md"],"mappings":"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","file":"35-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\n\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\nconst SplitPane = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n    this.when = QUERY['lg'];\n  }\n  visibleChanged(visible) {\n    const detail = { visible, isPane: this.isPane.bind(this) };\n    this.ionSplitPaneVisible.emit(detail);\n  }\n  connectedCallback() {\n    this.styleChildren();\n    this.updateState();\n  }\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n  updateState() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n    // Check if the split-pane is disabled\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    }\n    // When query is a boolean\n    const query = this.when;\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    }\n    // When query is a string, let's find first if it is a shortcut\n    const mediaQuery = QUERY[query] || query;\n    // Media query is empty or null, we hide it\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n    if (window.matchMedia) {\n      // Listen on media query\n      const callback = (q) => {\n        this.visible = q.matches;\n      };\n      const mediaList = window.matchMedia(mediaQuery);\n      mediaList.addListener(callback);\n      this.rmL = () => mediaList.removeListener(callback);\n      this.visible = mediaList.matches;\n    }\n  }\n  isPane(element) {\n    if (!this.visible) {\n      return false;\n    }\n    return element.parentElement === this.el\n      && element.classList.contains(SPLIT_PANE_SIDE);\n  }\n  styleChildren() {\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n        foundMain = true;\n      }\n      setPaneClass(child, isMain);\n    }\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible\n      } }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"visible\": [\"visibleChanged\"],\n    \"disabled\": [\"updateState\"],\n    \"when\": [\"updateState\"]\n  }; }\n};\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  }\n  else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\nSplitPane.style = {\n  ios: splitPaneIosCss,\n  md: splitPaneMdCss\n};\n\nexport { SplitPane as ion_split_pane };\n"]}