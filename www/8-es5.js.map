{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js"],"names":["checkboxIosCss","checkboxMdCss","Checkbox","hostRef","ionChange","ionFocus","ionBlur","ionStyle","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","ev","preventDefault","setFocus","onFocus","emit","onBlur","emitStyle","isChecked","focusEl","focus","color","el","mode","label","labelId","labelText","path","d","part","role","viewBox","htmlFor","type","id","ref","style","ios","md"],"mappings":"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","file":"8-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { d as getAriaLabel, e as renderHiddenInput } from './helpers-1457892a.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  render() {\n    const { color, checked, disabled, el, indeterminate, inputId, name, value } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, (checked ? value : ''), disabled);\n    let path = indeterminate\n      ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n      : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n    if (mode === 'md') {\n      path = indeterminate\n        ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n        : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n    }\n    return (h(Host, { onClick: this.onClick, \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        'interactive': true\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: focusEl => this.focusEl = focusEl })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"]}