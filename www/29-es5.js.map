{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writePath","history","root","direction","state","parsePath","pushState","replaceState","chainToPath","chain","route","segment","param","params","slice","push","removePrefix","prefix","i","readPath","loc","pathname","hash","qsStart","indexOf","substr","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","beforeEnter","beforeLeave","a","b","assign","routerIDsToChain","chains","match","maxMatches","routerPathToChain","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","runGuards","getPath","canProceed","setPath","writeNavStateRoot","onRoutesChanged","onRedirectChanged","bind","historyDirection","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","parsedPath","waitPromise","warn","safeWriteNavState","_a","win","title","redirectFrom","lock","unlock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","color","style"],"mappings":"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","file":"29-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-7a8b7a1c.js';\nimport { c as componentOnReady, o as debounce } from './helpers-1457892a.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n// Join the non empty segments with \"/\".\nconst generatePath = (segments) => {\n  const path = segments\n    .filter(s => s.length > 0)\n    .join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...path], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\nconst chainToPath = (chain) => {\n  const path = [];\n  for (const route of chain) {\n    for (const segment of route.path) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        path.push(param);\n      }\n      else if (segment !== '') {\n        path.push(segment);\n      }\n    }\n  }\n  return path;\n};\n// Remove the prefix segments from the path segments.\n//\n// Return:\n// - null when the path segments do not start with the passed prefix,\n// - the path segments after the prefix otherwise.\nconst removePrefix = (prefix, path) => {\n  if (prefix.length > path.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n  if (path.length === prefix.length) {\n    return [''];\n  }\n  return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const path = parsePath(pathname).segments;\n  return removePrefix(prefix, path);\n};\n// Parses the path to:\n// - segments an array of '/' separated parts,\n// - queryString (undefined when no query string).\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substr(qsStart + 1);\n      path = path.substr(0, qsStart);\n    }\n    segments = path.split('/')\n      .map(s => s.trim())\n      .filter(s => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const path = [];\n    chain.forEach(r => path.push(...r.path));\n    const ids = chain.map(r => r.id);\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise(resolve => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    outlet = searchNavNode(node);\n    if (outlet) {\n      const id = await outlet.getRouteId();\n      if (id) {\n        node = id.element;\n        id.element = undefined;\n        ids.push(id);\n      }\n      else {\n        break;\n      }\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise(resolve => {\n    window.addEventListener('ionNavWillLoad', resolve, { once: true });\n  });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(QUERY)) {\n    return root;\n  }\n  const outlet = root.querySelector(QUERY);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n// Returns whether the given redirect matches the given path segments.\n//\n// A redirect matches when the segments of the path and redirect.from are equal.\n// Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n// The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\nconst matchesRedirect = (path, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > path.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== path[i]) {\n      return false;\n    }\n  }\n  return from.length === path.length;\n};\n// Returns the first redirect matching the path segments or undefined when no match found.\nconst findRouteRedirect = (path, redirects) => {\n  return redirects.find(redirect => matchesRedirect(path, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      /**\n       * Only compare routes with the chain that have the same number of parameters.\n       */\n      if (routeIdParams.length === routeChain.path.length) {\n        /**\n         * Maps the route's params into a path based on the path variable names,\n         * to compare against the route chain format.\n         *\n         * Before:\n         * ```ts\n         * {\n         *  params: {\n         *    s1: 'a',\n         *    s2: 'b'\n         *  }\n         * }\n         * ```\n         *\n         * After:\n         * ```ts\n         * [':s1',':s2']\n         * ```\n         */\n        const pathWithParams = routeIdParams.map(key => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.path[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\nconst matchesPath = (inputPath, chain) => {\n  const segments = new RouterSegments(inputPath);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const path = chain[i].path;\n    if (path[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of path) {\n        const data = segments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = (matchesDefault)\n    ? matchesDefault === (segments.next() === '')\n    : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave\n    }));\n  }\n  return chain;\n};\n// Merges the route parameter objects.\n// Returns undefined when both parameters are undefined.\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, ids[i] && ids[i].params)\n    }));\n  }\n  return null;\n};\nconst routerPathToChain = (path, chains) => {\n  let match = null;\n  let matches = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesPath(path, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > matches) {\n        matches = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const path of route.path) {\n      if (path[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (path !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(path) {\n    this.path = path.slice();\n  }\n  next() {\n    if (this.path.length > 0) {\n      return this.path.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map(el => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n    .map(el => {\n    const component = readProp(el, 'component');\n    return {\n      path: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el)\n    };\n  });\n};\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\nconst flattenNode = (chain, chains, node) => {\n  chain = chain.slice();\n  chain.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getPath());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setPath(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getPath();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, processNextHandler => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified URL.\n   *\n   * @param url The url to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(url, direction = 'forward', animation) {\n    if (url.startsWith('.')) {\n      url = (new URL(url, window.location.href)).pathname;\n    }\n    let parsedPath = parsePath(url);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setPath(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /**\n   * Go back to previous page in the window.history.\n   */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = routerIDsToChain(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n      return false;\n    }\n    const path = chainToPath(chain);\n    if (!path) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setPath(path, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n    return true;\n  }\n  // This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes.\n  onRedirectChanged() {\n    const path = this.getPath();\n    if (path && findRouteRedirect(path, readRedirects(this.el))) {\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n    }\n  }\n  // This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes.\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(path, direction, animation) {\n    if (!path) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(path, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments, queryString } = redirect.to;\n      this.setPath(segments, direction, queryString);\n      redirectFrom = redirect.from;\n      path = segments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = routerPathToChain(path, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise(r => resolve = r);\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  // Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n  //\n  // When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n  // Otherwise the beforeEnterHook hook of the target route is executed.\n  async runGuards(to = this.getPath(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = routerPathToChain(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = routerPathToChain(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(path, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setPath(path, direction, queryString) {\n    this.state++;\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n  }\n  getPath() {\n    return readPath(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(path, redirectFromPath) {\n    const from = this.previousPath;\n    const to = generatePath(path);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}