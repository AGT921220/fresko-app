{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js"],"names":["CELL_TYPE_ITEM","CELL_TYPE_HEADER","CELL_TYPE_FOOTER","NODE_CHANGE_NONE","NODE_CHANGE_POSITION","NODE_CHANGE_CELL","MIN_READS","updateVDom","dom","heightIndex","cells","range","node","change","d","toMutate","end","offset","length","i","cell","find","n","top","push","pool","filter","type","index","visible","forEach","doRender","el","nodeRender","updateCellHeight","children","Array","from","tagName","childrenNu","child","newChild","createNode","classList","add","appendChild","style","transform","remove","reads","template","getTemplate","ownerDocument","importNode","content","querySelector","getViewport","scrollTop","vierportHeight","margin","Math","max","bottom","getRange","viewport","buffer","topPos","bottomPos","min","getShouldUpdate","dirtyIndex","currentRange","findCellIndex","findIndex","c","inplaceUpdate","dst","src","calcCells","items","itemHeight","headerHeight","footerHeight","headerFn","footerFn","approxHeaderHeight","approxFooterHeight","approxItemHeight","j","len","item","value","height","calcHeightIndex","buf","acum","resizeBuffer","Uint32Array","newBuf","set","subarray","positionForIndex","virtualScrollCss","VirtualScroll","hostRef","viewportHeight","virtualDom","isEnabled","viewportOffset","currentScrollTop","indexDirty","lastItemLen","totalHeight","onScroll","updateVirtualScroll","console","warn","contentEl","closest","error","getScrollElement","scrollEl","updateState","undefined","Promise","resolve","getHeightIndex","cellIndex","scheduleUpdate","checkRange","timerUpdate","clearTimeout","readVS","bind","writeVS","topOffset","offsetTop","offsetParent","offsetHeight","shouldUpdate","domRender","renderItem","update","window","getComputedStyle","parseFloat","getPropertyValue","setCellHeight","setTimeout","shouldEnable","enableScrollEvents","Infinity","shouldListen","rmEvent","addEventListener","removeEventListener","renderHeader","renderFooter","VirtualProxy","map","renderVirtualNode","utils","vattrs","classes","Object","assign"],"mappings":"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","file":"42-es5.js","sourcesContent":["import { r as registerInstance, f as readTask, c as writeTask, j as forceUpdate, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { c as componentOnReady } from './helpers-1457892a.js';\n\nconst CELL_TYPE_ITEM = 'item';\nconst CELL_TYPE_HEADER = 'header';\nconst CELL_TYPE_FOOTER = 'footer';\nconst NODE_CHANGE_NONE = 0;\nconst NODE_CHANGE_POSITION = 1;\nconst NODE_CHANGE_CELL = 2;\n\nconst MIN_READS = 2;\nconst updateVDom = (dom, heightIndex, cells, range) => {\n  // reset dom\n  for (const node of dom) {\n    node.change = NODE_CHANGE_NONE;\n    node.d = true;\n  }\n  // try to match into exisiting dom\n  const toMutate = [];\n  const end = range.offset + range.length;\n  for (let i = range.offset; i < end; i++) {\n    const cell = cells[i];\n    const node = dom.find(n => n.d && n.cell === cell);\n    if (node) {\n      const top = heightIndex[i];\n      if (top !== node.top) {\n        node.top = top;\n        node.change = NODE_CHANGE_POSITION;\n      }\n      node.d = false;\n    }\n    else {\n      toMutate.push(cell);\n    }\n  }\n  // needs to append\n  const pool = dom.filter(n => n.d);\n  for (const cell of toMutate) {\n    const node = pool.find(n => n.d && n.cell.type === cell.type);\n    const index = cell.i;\n    if (node) {\n      node.d = false;\n      node.change = NODE_CHANGE_CELL;\n      node.cell = cell;\n      node.top = heightIndex[index];\n    }\n    else {\n      dom.push({\n        d: false,\n        cell,\n        visible: true,\n        change: NODE_CHANGE_CELL,\n        top: heightIndex[index],\n      });\n    }\n  }\n  dom\n    .filter(n => n.d && n.top !== -9999)\n    .forEach(n => {\n    n.change = NODE_CHANGE_POSITION;\n    n.top = -9999;\n  });\n};\nconst doRender = (el, nodeRender, dom, updateCellHeight) => {\n  const children = Array.from(el.children).filter(n => n.tagName !== 'TEMPLATE');\n  const childrenNu = children.length;\n  let child;\n  for (let i = 0; i < dom.length; i++) {\n    const node = dom[i];\n    const cell = node.cell;\n    // the cell change, the content must be updated\n    if (node.change === NODE_CHANGE_CELL) {\n      if (i < childrenNu) {\n        child = children[i];\n        nodeRender(child, cell, i);\n      }\n      else {\n        const newChild = createNode(el, cell.type);\n        child = nodeRender(newChild, cell, i) || newChild;\n        child.classList.add('virtual-item');\n        el.appendChild(child);\n      }\n      child['$ionCell'] = cell;\n    }\n    else {\n      child = children[i];\n    }\n    // only update position when it changes\n    if (node.change !== NODE_CHANGE_NONE) {\n      child.style.transform = `translate3d(0,${node.top}px,0)`;\n    }\n    // update visibility\n    const visible = cell.visible;\n    if (node.visible !== visible) {\n      if (visible) {\n        child.classList.remove('virtual-loading');\n      }\n      else {\n        child.classList.add('virtual-loading');\n      }\n      node.visible = visible;\n    }\n    // dynamic height\n    if (cell.reads > 0) {\n      updateCellHeight(cell, child);\n      cell.reads--;\n    }\n  }\n};\nconst createNode = (el, type) => {\n  const template = getTemplate(el, type);\n  if (template && el.ownerDocument) {\n    return el.ownerDocument.importNode(template.content, true).children[0];\n  }\n  return null;\n};\nconst getTemplate = (el, type) => {\n  switch (type) {\n    case CELL_TYPE_ITEM: return el.querySelector('template:not([name])');\n    case CELL_TYPE_HEADER: return el.querySelector('template[name=header]');\n    case CELL_TYPE_FOOTER: return el.querySelector('template[name=footer]');\n  }\n};\nconst getViewport = (scrollTop, vierportHeight, margin) => {\n  return {\n    top: Math.max(scrollTop - margin, 0),\n    bottom: scrollTop + vierportHeight + margin\n  };\n};\nconst getRange = (heightIndex, viewport, buffer) => {\n  const topPos = viewport.top;\n  const bottomPos = viewport.bottom;\n  // find top index\n  let i = 0;\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] > topPos) {\n      break;\n    }\n  }\n  const offset = Math.max(i - buffer - 1, 0);\n  // find bottom index\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] >= bottomPos) {\n      break;\n    }\n  }\n  const end = Math.min(i + buffer, heightIndex.length);\n  const length = end - offset;\n  return { offset, length };\n};\nconst getShouldUpdate = (dirtyIndex, currentRange, range) => {\n  const end = range.offset + range.length;\n  return (dirtyIndex <= end ||\n    currentRange.offset !== range.offset ||\n    currentRange.length !== range.length);\n};\nconst findCellIndex = (cells, index) => {\n  const max = cells.length > 0 ? cells[cells.length - 1].index : 0;\n  if (index === 0) {\n    return 0;\n  }\n  else if (index === max + 1) {\n    return cells.length;\n  }\n  else {\n    return cells.findIndex(c => c.index === index);\n  }\n};\nconst inplaceUpdate = (dst, src, offset) => {\n  if (offset === 0 && src.length >= dst.length) {\n    return src;\n  }\n  for (let i = 0; i < src.length; i++) {\n    dst[i + offset] = src[i];\n  }\n  return dst;\n};\nconst calcCells = (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) => {\n  const cells = [];\n  const end = len + offset;\n  for (let i = offset; i < end; i++) {\n    const item = items[i];\n    if (headerFn) {\n      const value = headerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_HEADER,\n          value,\n          index: i,\n          height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\n          reads: headerHeight ? 0 : MIN_READS,\n          visible: !!headerHeight,\n        });\n      }\n    }\n    cells.push({\n      i: j++,\n      type: CELL_TYPE_ITEM,\n      value: item,\n      index: i,\n      height: itemHeight ? itemHeight(item, i) : approxItemHeight,\n      reads: itemHeight ? 0 : MIN_READS,\n      visible: !!itemHeight,\n    });\n    if (footerFn) {\n      const value = footerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_FOOTER,\n          value,\n          index: i,\n          height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\n          reads: footerHeight ? 0 : MIN_READS,\n          visible: !!footerHeight,\n        });\n      }\n    }\n  }\n  return cells;\n};\nconst calcHeightIndex = (buf, cells, index) => {\n  let acum = buf[index];\n  for (let i = index; i < buf.length; i++) {\n    buf[i] = acum;\n    acum += cells[i].height;\n  }\n  return acum;\n};\nconst resizeBuffer = (buf, len) => {\n  if (!buf) {\n    return new Uint32Array(len);\n  }\n  if (buf.length === len) {\n    return buf;\n  }\n  else if (len > buf.length) {\n    const newBuf = new Uint32Array(len);\n    newBuf.set(buf);\n    return newBuf;\n  }\n  else {\n    return buf.subarray(0, len);\n  }\n};\nconst positionForIndex = (index, cells, heightIndex) => {\n  const cell = cells.find(c => c.type === CELL_TYPE_ITEM && c.index === index);\n  if (cell) {\n    return heightIndex[cell.i];\n  }\n  return -1;\n};\n\nconst virtualScrollCss = \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute !important;top:0 !important;right:0 !important;left:0 !important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\";\n\nconst VirtualScroll = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.range = { offset: 0, length: 0 };\n    this.viewportHeight = 0;\n    this.cells = [];\n    this.virtualDom = [];\n    this.isEnabled = false;\n    this.viewportOffset = 0;\n    this.currentScrollTop = 0;\n    this.indexDirty = 0;\n    this.lastItemLen = 0;\n    this.totalHeight = 0;\n    /**\n     * It is important to provide this\n     * if virtual item height will be significantly larger than the default\n     * The approximate height of each virtual item template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxItemHeight = 45;\n    /**\n     * The approximate height of each header template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxHeaderHeight = 30;\n    /**\n     * The approximate width of each footer template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxFooterHeight = 30;\n    this.onScroll = () => {\n      this.updateVirtualScroll();\n    };\n  }\n  itemsChanged() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  componentWillLoad() {\n    console.warn(`[Deprecation Warning]: ion-virtual-scroll has been deprecated and will be removed in Ionic Framework v7.0. See https://ionicframework.com/docs/angular/virtual-scroll for migration steps.`);\n  }\n  async connectedCallback() {\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n      return;\n    }\n    this.scrollEl = await contentEl.getScrollElement();\n    this.contentEl = contentEl;\n    this.calcCells();\n    this.updateState();\n  }\n  componentDidUpdate() {\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.scrollEl = undefined;\n  }\n  onResize() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  /**\n   * Returns the position of the virtual item at the given index.\n   */\n  positionForItem(index) {\n    return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n  }\n  /**\n   * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n   * dirty any time the content or their style changes.\n   *\n   * The subset of items to be updated can are specifing by an offset and a length.\n   */\n  async checkRange(offset, len = -1) {\n    // TODO: kind of hacky how we do in-place updated of the cells\n    // array. this part needs a complete refactor\n    if (!this.items) {\n      return;\n    }\n    const length = (len === -1)\n      ? this.items.length - offset\n      : len;\n    const cellIndex = findCellIndex(this.cells, offset);\n    const cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n    this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n    this.lastItemLen = this.items.length;\n    this.indexDirty = Math.max(offset - 1, 0);\n    this.scheduleUpdate();\n  }\n  /**\n   * This method marks the tail the items array as dirty, so they can be re-rendered.\n   *\n   * It's equivalent to calling:\n   *\n   * ```js\n   * virtualScroll.checkRange(lastItemLen);\n   * ```\n   */\n  async checkEnd() {\n    if (this.items) {\n      this.checkRange(this.lastItemLen);\n    }\n  }\n  updateVirtualScroll() {\n    // do nothing if virtual-scroll is disabled\n    if (!this.isEnabled || !this.scrollEl) {\n      return;\n    }\n    // unschedule future updates\n    if (this.timerUpdate) {\n      clearTimeout(this.timerUpdate);\n      this.timerUpdate = undefined;\n    }\n    // schedule DOM operations into the stencil queue\n    readTask(this.readVS.bind(this));\n    writeTask(this.writeVS.bind(this));\n  }\n  readVS() {\n    const { contentEl, scrollEl, el } = this;\n    let topOffset = 0;\n    let node = el;\n    while (node && node !== contentEl) {\n      topOffset += node.offsetTop;\n      node = node.offsetParent;\n    }\n    this.viewportOffset = topOffset;\n    if (scrollEl) {\n      this.viewportHeight = scrollEl.offsetHeight;\n      this.currentScrollTop = scrollEl.scrollTop;\n    }\n  }\n  writeVS() {\n    const dirtyIndex = this.indexDirty;\n    // get visible viewport\n    const scrollTop = this.currentScrollTop - this.viewportOffset;\n    const viewport = getViewport(scrollTop, this.viewportHeight, 100);\n    // compute lazily the height index\n    const heightIndex = this.getHeightIndex();\n    // get array bounds of visible cells base in the viewport\n    const range = getRange(heightIndex, viewport, 2);\n    // fast path, do nothing\n    const shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n    if (!shouldUpdate) {\n      return;\n    }\n    this.range = range;\n    // in place mutation of the virtual DOM\n    updateVDom(this.virtualDom, heightIndex, this.cells, range);\n    // Write DOM\n    // Different code paths taken depending of the render API used\n    if (this.nodeRender) {\n      doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n    }\n    else if (this.domRender) {\n      this.domRender(this.virtualDom);\n    }\n    else if (this.renderItem) {\n      forceUpdate(this);\n    }\n  }\n  updateCellHeight(cell, node) {\n    const update = () => {\n      if (node['$ionCell'] === cell) {\n        const style = window.getComputedStyle(node);\n        const height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n        this.setCellHeight(cell, height);\n      }\n    };\n    if (node) {\n      componentOnReady(node, update);\n    }\n    else {\n      update();\n    }\n  }\n  setCellHeight(cell, height) {\n    const index = cell.i;\n    // the cell might changed since the height update was scheduled\n    if (cell !== this.cells[index]) {\n      return;\n    }\n    if (cell.height !== height || cell.visible !== true) {\n      cell.visible = true;\n      cell.height = height;\n      this.indexDirty = Math.min(this.indexDirty, index);\n      this.scheduleUpdate();\n    }\n  }\n  scheduleUpdate() {\n    clearTimeout(this.timerUpdate);\n    this.timerUpdate = setTimeout(() => this.updateVirtualScroll(), 100);\n  }\n  updateState() {\n    const shouldEnable = !!(this.scrollEl &&\n      this.cells);\n    if (shouldEnable !== this.isEnabled) {\n      this.enableScrollEvents(shouldEnable);\n      if (shouldEnable) {\n        this.updateVirtualScroll();\n      }\n    }\n  }\n  calcCells() {\n    if (!this.items) {\n      return;\n    }\n    this.lastItemLen = this.items.length;\n    this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n    this.indexDirty = 0;\n  }\n  getHeightIndex() {\n    if (this.indexDirty !== Infinity) {\n      this.calcHeightIndex(this.indexDirty);\n    }\n    return this.heightIndex;\n  }\n  calcHeightIndex(index = 0) {\n    // TODO: optimize, we don't need to calculate all the cells\n    this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n    this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\n    this.indexDirty = Infinity;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.rmEvent) {\n      this.rmEvent();\n      this.rmEvent = undefined;\n    }\n    const scrollEl = this.scrollEl;\n    if (scrollEl) {\n      this.isEnabled = shouldListen;\n      scrollEl.addEventListener('scroll', this.onScroll);\n      this.rmEvent = () => {\n        scrollEl.removeEventListener('scroll', this.onScroll);\n      };\n    }\n  }\n  renderVirtualNode(node) {\n    const { type, value, index } = node.cell;\n    switch (type) {\n      case CELL_TYPE_ITEM: return this.renderItem(value, index);\n      case CELL_TYPE_HEADER: return this.renderHeader(value, index);\n      case CELL_TYPE_FOOTER: return this.renderFooter(value, index);\n    }\n  }\n  render() {\n    return (h(Host, { style: {\n        height: `${this.totalHeight}px`\n      } }, this.renderItem && (h(VirtualProxy, { dom: this.virtualDom }, this.virtualDom.map(node => this.renderVirtualNode(node))))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"itemHeight\": [\"itemsChanged\"],\n    \"headerHeight\": [\"itemsChanged\"],\n    \"footerHeight\": [\"itemsChanged\"],\n    \"items\": [\"itemsChanged\"]\n  }; }\n};\nconst VirtualProxy = ({ dom }, children, utils) => {\n  return utils.map(children, (child, i) => {\n    const node = dom[i];\n    const vattrs = child.vattrs || {};\n    let classes = vattrs.class || '';\n    classes += 'virtual-item ';\n    if (!node.visible) {\n      classes += 'virtual-loading';\n    }\n    return Object.assign(Object.assign({}, child), { vattrs: Object.assign(Object.assign({}, vattrs), { class: classes, style: Object.assign(Object.assign({}, vattrs.style), { transform: `translate3d(0,${node.top}px,0)` }) }) });\n  });\n};\nVirtualScroll.style = virtualScrollCss;\n\nexport { VirtualScroll as ion_virtual_scroll };\n"]}