{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":["imgCss","Img","hostRef","ionImgWillLoad","ionImgDidLoad","ionError","onLoad","emit","onError","addIO","src","undefined","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","length","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","decoding","alt","part","style"],"mappings":";;;;;;;;;;;;;;;;;;;IAAA;IAAA;;;IAAA;MAAA;IAAA;IAAA;;;IAAA;IAAA;IAAA;IAAA;;;IAAA;IAAA;IAAA;;IAGA,IAAMA,MAAM,GAAG,oMAAf;;IAEA,IAAMC,GAAG;MACP,aAAYC,OAAZ,EAAqB;QAAA;;QAAA;;QACnB,6DAAiB,IAAjB,EAAuBA,OAAvB;QACA,KAAKC,cAAL,GAAsB,6DAAY,IAAZ,EAAkB,gBAAlB,EAAoC,CAApC,CAAtB;QACA,KAAKC,aAAL,GAAqB,6DAAY,IAAZ,EAAkB,eAAlB,EAAmC,CAAnC,CAArB;QACA,KAAKC,QAAL,GAAgB,6DAAY,IAAZ,EAAkB,UAAlB,EAA8B,CAA9B,CAAhB;;QACA,KAAKC,MAAL,GAAc,YAAM;UAClB,KAAI,CAACF,aAAL,CAAmBG,IAAnB;QACD,CAFD;;QAGA,KAAKC,OAAL,GAAe,YAAM;UACnB,KAAI,CAACH,QAAL,CAAcE,IAAd;QACD,CAFD;MAGD;;MAZM;QAAA;QAAA,OAaP,sBAAa;UACX,KAAKE,KAAL;QACD;MAfM;QAAA;QAAA,OAgBP,4BAAmB;UACjB,KAAKA,KAAL;QACD;MAlBM;QAAA;QAAA,OAmBP,iBAAQ;UAAA;;UACN,IAAI,KAAKC,GAAL,KAAaC,SAAjB,EAA4B;YAC1B;UACD;;UACD,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IACF,0BAA0BA,MADxB,IAEF,+BAA+BA,MAF7B,IAGF,oBAAoBA,MAAM,CAACC,yBAAP,CAAiCC,SAHvD,EAGkE;YAChE,KAAKC,QAAL;YACA,KAAKC,EAAL,GAAU,IAAIC,oBAAJ,CAAyB,UAAAC,IAAI,EAAI;cACzC;AACR;AACA;AACA;AACA;cACQ,IAAIA,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAJ,CAAsBC,cAA1B,EAA0C;gBACxC,MAAI,CAACC,IAAL;;gBACA,MAAI,CAACN,QAAL;cACD;YACF,CAVS,CAAV;YAWA,KAAKC,EAAL,CAAQM,OAAR,CAAgB,KAAKC,EAArB;UACD,CAjBD,MAkBK;YACH;YACAC,UAAU,CAAC;cAAA,OAAM,MAAI,CAACH,IAAL,EAAN;YAAA,CAAD,EAAoB,GAApB,CAAV;UACD;QACF;MA7CM;QAAA;QAAA,OA8CP,gBAAO;UACL,KAAKI,SAAL,GAAiB,KAAKjB,OAAtB;UACA,KAAKkB,OAAL,GAAe,KAAKhB,GAApB;UACA,KAAKP,cAAL,CAAoBI,IAApB;QACD;MAlDM;QAAA;QAAA,OAmDP,oBAAW;UACT,IAAI,KAAKS,EAAT,EAAa;YACX,KAAKA,EAAL,CAAQW,UAAR;YACA,KAAKX,EAAL,GAAUL,SAAV;UACD;QACF;MAxDM;QAAA;QAAA,OAyDP,kBAAS;UACP,OAAQ,6DAAE,oDAAF,EAAQ;YAAE,SAAO,oEAAW,IAAX;UAAT,CAAR,EAAqC,6DAAE,KAAF,EAAS;YAAEiB,QAAQ,EAAE,OAAZ;YAAqBlB,GAAG,EAAE,KAAKgB,OAA/B;YAAwCG,GAAG,EAAE,KAAKA,GAAlD;YAAuDvB,MAAM,EAAE,KAAKA,MAApE;YAA4EE,OAAO,EAAE,KAAKiB,SAA1F;YAAqGK,IAAI,EAAE;UAA3G,CAAT,CAArC,CAAR;QACD;MA3DM;QAAA;QAAA,KA4DP,eAAS;UAAE,OAAO,6DAAW,IAAX,CAAP;QAA0B;MA5D9B;QAAA;QAAA,KA6DP,eAAsB;UAAE,OAAO;YAC7B,OAAO,CAAC,YAAD;UADsB,CAAP;QAEpB;MA/DG;;MAAA;IAAA,GAAT;;IAiEA7B,GAAG,CAAC8B,KAAJ,GAAY/B,MAAZ","file":"13-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n    this.onLoad = () => {\n      this.ionImgDidLoad.emit();\n    };\n    this.onError = () => {\n      this.ionError.emit();\n    };\n  }\n  srcChanged() {\n    this.addIO();\n  }\n  componentDidLoad() {\n    this.addIO();\n  }\n  addIO() {\n    if (this.src === undefined) {\n      return;\n    }\n    if (typeof window !== 'undefined' &&\n      'IntersectionObserver' in window &&\n      'IntersectionObserverEntry' in window &&\n      'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n      this.removeIO();\n      this.io = new IntersectionObserver(data => {\n        /**\n         * On slower devices, it is possible for an intersection observer entry to contain multiple\n         * objects in the array. This happens when quickly scrolling an image into view and then out of\n         * view. In this case, the last object represents the current state of the component.\n         */\n        if (data[data.length - 1].isIntersecting) {\n          this.load();\n          this.removeIO();\n        }\n      });\n      this.io.observe(this.el);\n    }\n    else {\n      // fall back to setTimeout for Safari and IE\n      setTimeout(() => this.load(), 200);\n    }\n  }\n  load() {\n    this.loadError = this.onError;\n    this.loadSrc = this.src;\n    this.ionImgWillLoad.emit();\n  }\n  removeIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  render() {\n    return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"src\": [\"srcChanged\"]\n  }; }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"]}